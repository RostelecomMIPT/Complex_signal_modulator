function [ sdv ] = FindOfPhase( IQ_Ts_Shift, Nfft )
    DownBySymbolA = zeros(length(IQ_Ts_Shift)/(Nfft + Nfft/8),1);
    DownBySymbolB = zeros(length(IQ_Ts_Shift)/(Nfft + Nfft/8),1);
    UpMedMultiplicationBySymbol = zeros(length(IQ_Ts_Shift)/(Nfft + Nfft/8),1);
    for k = 1 : ( length(IQ_Ts_Shift)/(Nfft + Nfft/8) )
        for l = 1 : Nfft/8
            UpMedMultiplicationBySymbol(k) = ...
                UpMedMultiplicationBySymbol(k) +...
                IQ_Ts_Shift( (k-1)*(Nfft + Nfft/8) + l ) *...
                (IQ_Ts_Shift( k*(Nfft+ Nfft/8) - Nfft/8 + l ))';
            DownBySymbolA(k) = DownBySymbolA(k) +...
                IQ_Ts_Shift( (k-1)*(Nfft + 1) + l ) *...
                IQ_Ts_Shift( (k-1)*(Nfft + 1) + l )';
            DownBySymbolB(k) = DownBySymbolB(k) +...
                IQ_Ts_Shift( k*(Nfft+ Nfft/8) - Nfft/8 + l )*...
                IQ_Ts_Shift( k*(Nfft+ Nfft/8) - Nfft/8 + l )';
        end
    end
    for k = 1 : ( length(IQ_Ts_Shift)/(Nfft + Nfft/8) )
        Med(k) = UpMedMultiplicationBySymbol(k)/...
            sqrt(DownBySymbolA(k) * (DownBySymbolB(k))');
        sdv(k) = angle(Med(k))/(2*pi);
    end
    sdv = sum(sdv)/( length(IQ_Ts_Shift)/(Nfft + Nfft/8) );
end

